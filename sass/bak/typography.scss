// utility classes

// colors
$colors: (
  'black': $black,
  'white': $white,
  'gray': $gray,
  'green': $green,
  'yellow': $yellow,
  'red': $red,
);

// font sizes
$minFontSize: 10;
$maxFontSize: 50;


// generate standard utility classes
@each $key, $color in $colors {
  .txt-#{$key} { color: $color; }
}
@for $size from $minFontSize through $maxFontSize {
  .txt-#{$size} { font-size: #{$size}px; }
}
.txt-left { text-align: left; }
.txt-center { text-align: center; }
.txt-right { text-align: right; }
.txt-normal { font-weight: $weightNormal; }
.txt-bold { font-weight: $weightBold; }
.txt-bolder { font-weight: $weightBolder; }

// generate sp only utility classes
@include sp-only {
  @each $key, $color in $colors {
    .txt-sp-#{$key} { color: $color; }
  }
  @for $size from $minFontSize through $maxFontSize {
    .txt-sp-#{$size} { font-size: #{$size}px; }
  }
  .txt-sp-left { text-align: left; }
  .txt-sp-center { text-align: center; }
  .txt-sp-right { text-align: right; }
  .txt-sp-normal { font-weight: $weightNormal; }
  .txt-sp-bold { font-weight: $weightBold; }
  .txt-sp-bolder { font-weight: $weightBolder; }
}

// generate pc only utility classes
@include pc-only {
  @each $key, $color in $colors {
    .txt-pc-#{$key} { color: $color; }
  }
  @for $size from $minFontSize through $maxFontSize {
    .txt-pc-#{$size} { font-size: #{$size}px; }
  }
  .txt-pc-left { text-align: left; }
  .txt-pc-center { text-align: center; }
  .txt-pc-right { text-align: right; }
  .txt-pc-normal { font-weight: $weightNormal; }
  .txt-pc-bold { font-weight: $weightBold; }
  .txt-pc-bolder { font-weight: $weightBolder; }
}

// other typographic utility classes
.txt-nobreak {
  white-space: nowrap;
}
